/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-04 11:06:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Products_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<style>\r\n");
      out.write("body {font-family: Arial, Helvetica, sans-serif;}\r\n");
      out.write("* {box-sizing: border-box;}\r\n");
      out.write("\r\n");
      out.write("input[type=text], select, textarea {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  padding: 12px;\r\n");
      out.write("  border: 1px solid #ccc;\r\n");
      out.write("  border-radius: 4px;\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  margin-top: 6px;\r\n");
      out.write("  margin-bottom: 16px;\r\n");
      out.write("  resize: vertical;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit] {\r\n");
      out.write("  background-color: #4CAF50;\r\n");
      out.write("  color: white;\r\n");
      out.write("  padding: 12px 20px;\r\n");
      out.write("  border: none;\r\n");
      out.write("  border-radius: 4px;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit]:hover {\r\n");
      out.write("  background-color: #45a049;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("  border-radius: 5px;\r\n");
      out.write("  background-color: white;\r\n");
      out.write("  padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    * Create three unequal columns that floats next to each other */\r\n");
      out.write(".column {\r\n");
      out.write("  float: left;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  height: 300px; /* Should be removed. Only for demonstration */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".left, .right {\r\n");
      out.write("  width: 30%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".middle {\r\n");
      out.write("  width: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Clear floats after the columns */\r\n");
      out.write(".row:after {\r\n");
      out.write("  content: \"\";\r\n");
      out.write("  display: table;\r\n");
      out.write("  clear: both;\r\n");
      out.write("}\r\n");
      out.write(".col-75 {\r\n");
      out.write("  float: left;\r\n");
      out.write("  width: 75%;\r\n");
      out.write("  margin-top: 6px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script> \r\n");
      out.write("function onvalidate()\r\n");
      out.write("{ \r\n");
      out.write(" var name = document.form.name.value;\r\n");
      out.write(" var season = document.form.season.value;\r\n");
      out.write(" var category = document.form.category.value; \r\n");
      out.write(" var place = document.form.place.value;\r\n");
      out.write(" var details = document.form.details.value;\r\n");
      out.write(" \r\n");
      out.write(" if (name==null || name==\"\")\r\n");
      out.write(" { \r\n");
      out.write(" alert(\"Product Name can't be blank\"); \r\n");
      out.write(" return false; \r\n");
      out.write(" }\r\n");
      out.write(" else if (season==null || season==\"\")\r\n");
      out.write(" { \r\n");
      out.write(" alert(\"Season can't be blank\"); \r\n");
      out.write(" return false; \r\n");
      out.write(" }\r\n");
      out.write(" else if (category==null || category==\"\")\r\n");
      out.write(" { \r\n");
      out.write(" alert(\"Category can't be blank\"); \r\n");
      out.write(" return false; \r\n");
      out.write(" }\r\n");
      out.write(" else if (place==null || place==\"\")\r\n");
      out.write(" {\r\n");
      out.write(" alert(\"Place can't be blank\"); \r\n");
      out.write(" return false; \r\n");
      out.write(" } \r\n");
      out.write(" \r\n");
      out.write(" } \r\n");
      out.write("</script> \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Navbar (sit on top) -->\r\n");
      out.write("<div class=\"w3-top\">\r\n");
      out.write("  <div class=\"w3-bar w3-black w3-wide w3-padding w3-card\">\r\n");
      out.write("    <a href=\"#home\" class=\"w3-bar-item w3-button\"><b>AG</b> Agro</a>\r\n");
      out.write("    <!-- Float links to the right. Hide them on small screens -->\r\n");
      out.write("    <div class=\"w3-right w3-hide-small\">\r\n");
      out.write("      <a href=\"#products\" class=\"w3-bar-item w3-button\">Products</a>\r\n");
      out.write("      <a href=\"#about\" class=\"w3-bar-item w3-button\">About</a>\r\n");
      out.write("      <a href=\"#slideshow\" class=\"w3-bar-item w3-button\">Contact</a>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<h1><center>Add Products</center></h1>\r\n");
      out.write("\r\n");
      out.write("<form action=\"ProductsServlet\" method=\"post\">\r\n");
      out.write("  <div class=\"column middle\">\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <label for=\"fname\">Product Name</label>\r\n");
      out.write("    <input type=\"text\" class=\"form-countrol\" id=\"name\" name=\"product\" placeholder=\"Product name..\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"lname\">Product season</label>\r\n");
      out.write("    <input type=\"text\" id=\"season\" name=\"season\" placeholder=\"Season of that product\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"country\">Category</label>\r\n");
      out.write("    <select id=\"category\" name=\"category\" required>\r\n");
      out.write("      <option value=\"Vegetable\">Vegetable</option>\r\n");
      out.write("      <option value=\"Fruit\">Fruit</option>\r\n");
      out.write("      <option value=\"Others\">Other product</option>\r\n");
      out.write("    </select>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <label for=\"lname\">Major Growing Places</label>\r\n");
      out.write("    <input type=\"text\" id=\"place\" name=\"places\" placeholder=\"Major growing places\" required>\r\n");
      out.write("\t\r\n");
      out.write("\t<label for=\"subject\">More Details</label>\r\n");
      out.write("    <textarea id=\"details\" name=\"details\" placeholder=\"If you want,you can write more information about product\" style=\"height:200px\" ></textarea>\r\n");
      out.write("\r\n");
      out.write("    <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("  \r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
