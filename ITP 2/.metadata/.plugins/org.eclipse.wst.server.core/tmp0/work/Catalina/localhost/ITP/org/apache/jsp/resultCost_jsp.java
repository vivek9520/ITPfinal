/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-05 10:31:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Utility.DBConnection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;

public final class resultCost_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("Utility.DBConnection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>Cost view</title>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("  font-family: Arial;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form.example input[type=text] {\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  font-size: 17px;\r\n");
      out.write("  border: 1px solid grey;\r\n");
      out.write("  float: left;\r\n");
      out.write("  width: 80%;\r\n");
      out.write("  background: #f1f1f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form.example button {\r\n");
      out.write("  float: left;\r\n");
      out.write("  width: 20%;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  background: #2196F3;\r\n");
      out.write("  color: white;\r\n");
      out.write("  font-size: 17px;\r\n");
      out.write("  border: 1px solid grey;\r\n");
      out.write("  border-left: none;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form.example button:hover {\r\n");
      out.write("  background: #0b7dda;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form.example::after {\r\n");
      out.write("  content: \"\";\r\n");
      out.write("  clear: both;\r\n");
      out.write("  display: table;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body background=\"img/bg-cost.jpg\">\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<div class=\"container\"> \r\n");
      out.write("  <div class=\"canvas_div_pdf\">\r\n");
      out.write("\t<button id=\"cmd\" onClick=\"getPDF()\" class=\"btn btn-primary active\">generate PDF</button>\r\n");
      out.write("  \r\n");
      out.write("<div class=\"container\" style=\"background-color: white\">\r\n");
      out.write("\r\n");
      out.write("  <h2 class=\"text-center\">Province</h2><br>\r\n");
      out.write("    \r\n");
      out.write("    <br>\r\n");
      out.write("    <br>\r\n");
      out.write("    ");

	String id = request.getParameter("userId");
	DBConnection db = new DBConnection();

	Connection con = db.createConnection();
	Statement statement = con.createStatement();
	ResultSet resultSet = null;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("          \r\n");
      out.write("  <table class=\"table table-hover table-info\">\r\n");
      out.write("    <thead>\r\n");
      out.write("      <tr>\r\n");
      out.write("       \r\n");
      out.write("        <th>Cost ID</th>\r\n");
      out.write("        <th>Province</th>\r\n");
      out.write("        <th>Product</th>\r\n");
      out.write("   \r\n");
      out.write("        <th>Amount</th>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("   \r\n");
      out.write("    \r\n");
      out.write(" ");

try{ 

String a = request.getParameter("search");
String sql ="SELECT *FROM costguide where province='"+a+"'";

resultSet = statement.executeQuery(sql);
 
while(resultSet.next()){
	
	
      out.write("\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td>");
      out.print(resultSet.getString("Cid") );
      out.write("  </td>\r\n");
      out.write("        <td> ");
      out.print(resultSet.getString("province") );
      out.write(" </td>\r\n");
      out.write("        <td> ");
      out.print(resultSet.getString("product") );
      out.write("  </td>\r\n");
      out.write("        \r\n");
      out.write("        <td> ");
      out.print(resultSet.getString("cost") );
      out.write(" </td>\r\n");
      out.write("     </tr>   \r\n");
      out.write("        \r\n");
      out.write("     \r\n");
      out.write(" \r\n");
      out.write("  ");
 
 
 
 
}

} catch (Exception e) {
e.printStackTrace();
}

      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("    <br>\r\n");
      out.write("</div>\r\n");
      out.write("    <br><br>\r\n");
      out.write("</div>    \r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getPDF(){\r\n");
      out.write("\t\t \r\n");
      out.write("\t\tvar HTML_Width = $(\".canvas_div_pdf\").width();\r\n");
      out.write("\t\tvar HTML_Height = $(\".canvas_div_pdf\").height();\r\n");
      out.write("\t\tvar top_left_margin = 15;\r\n");
      out.write("\t\tvar PDF_Width = HTML_Width+(top_left_margin*2);\r\n");
      out.write("\t\tvar PDF_Height = (PDF_Width*1.5)+(top_left_margin*2);\r\n");
      out.write("\t\tvar canvas_image_width = HTML_Width;\r\n");
      out.write("\t\tvar canvas_image_height = HTML_Height;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar totalPDFPages = Math.ceil(HTML_Height/PDF_Height)-1;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t    $(\"#cmd\").hide();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\thtml2canvas($(\".canvas_div_pdf\")[0],{allowTaint:true}).then(function(canvas) {\r\n");
      out.write("\t\t\tcanvas.getContext('2d');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(canvas.height+\"  \"+canvas.width);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n");
      out.write("\t\t\tvar pdf = new jsPDF('p', 'pt',  [PDF_Width, PDF_Height]);\r\n");
      out.write("\t\t    pdf.addImage(imgData, 'JPG', top_left_margin, top_left_margin,canvas_image_width,canvas_image_height);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor (var i = 1; i <= totalPDFPages; i++) { \r\n");
      out.write("\t\t\t\tpdf.addPage(PDF_Width, PDF_Height);\r\n");
      out.write("\t\t\t\tpdf.addImage(imgData, 'JPG', top_left_margin, -(PDF_Height*i)+(top_left_margin*4),canvas_image_width,canvas_image_height);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t    pdf.save(\"ProvienceSummary.pdf\");\r\n");
      out.write("\t    });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t    $(\"#cmd\").showq1();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t</script>    \r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://html2canvas.hertzen.com/dist/html2canvas.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
