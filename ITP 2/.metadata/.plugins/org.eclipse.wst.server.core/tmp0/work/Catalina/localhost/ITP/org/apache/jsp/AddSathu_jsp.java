/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-03 10:08:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AddSathu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>Add Guide</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("  <style>\r\n");
      out.write("    * Create three unequal columns that floats next to each other */\r\n");
      out.write(".column {\r\n");
      out.write("  float: left;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  height: 300px; /* Should be removed. Only for demonstration */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".left, .right {\r\n");
      out.write("  width: 30%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".middle {\r\n");
      out.write("  width: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Clear floats after the columns */\r\n");
      out.write(".row:after {\r\n");
      out.write("  content: \"\";\r\n");
      out.write("  display: table;\r\n");
      out.write("  clear: both;\r\n");
      out.write("}\r\n");
      out.write(".col-75 {\r\n");
      out.write("  float: left;\r\n");
      out.write("  width: 75%;\r\n");
      out.write("  margin-top: 6px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("  </style>\r\n");
      out.write("  \r\n");
      out.write("  <script>\r\n");
      out.write("function validateForm() {\r\n");
      out.write("  var x = document.forms[\"myForm\"][\"name\"].value;\r\n");
      out.write("  if (x == \"\") {\r\n");
      out.write("    alert(\"Name must be filled out\");\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function validateForm() {\r\n");
      out.write("  var x = document.forms[\"myForm\"][\"steps\"].value;\r\n");
      out.write("  if (x == \"\") {\r\n");
      out.write("    alert(\"Steps must be filled out\");\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body background=\"a1.jpg\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("  <div class=\"column left\">\r\n");
      out.write("  <br>\r\n");
      out.write("  <br>\r\n");
      out.write("  <br>\r\n");
      out.write("    <img src=\"img/b5.jpg\" alt=\"Girl in a jacket\">\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  <div class=\"column middle\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("\t<br>\r\n");
      out.write("  <h2><center><b><u>Add Your Guide</u></b></center></h2>\r\n");
      out.write("  <br>\r\n");
      out.write("<form name=\"myForm\" action=\"AddSathu\" onsubmit=\"return validateForm()\" method=\"post\">\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label for=\"name\">Vegetable Name:</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter name\" name=\"name\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("\t\r\n");
      out.write("\t   <div class=\"form-group\">\r\n");
      out.write("      <label for=\"noofdays\">Days Taken:</label>\r\n");
      out.write("      <input type=\"number\" class=\"form-control\" id=\"noofdays\" placeholder=\"Enter days\" name=\"days\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("\t\r\n");
      out.write("\t   <div class=\"form-group\">\r\n");
      out.write("      <label for=\"tools\">Tools Name:</label>\r\n");
      out.write("     <textarea class=\"form-control\" id=\"tools\" rows=\"7\" name=\"tools\"></textarea>\r\n");
      out.write("    </div>\r\n");
      out.write("\t\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("  <label for=\"steps\">Steps</label>\r\n");
      out.write("  <textarea class=\"form-control\" id=\"steps\" rows=\"7\" name=\"steps\"></textarea>\r\n");
      out.write("</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("    <center><button type=\"submit\" class=\"btn btn-primary\">Submit</button></center>\r\n");
      out.write("  </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
